env:
  global:
    - MODULE_NAME=Dip

matrix:
  allow_failures:
    - os: linux
  include:
    - script:
        - set -o pipefail
        - xcodebuild test -workspace Dip.xcworkspace -scheme Dip-iOS -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 6,OS=latest' ONLY_ACTIVE_ARCH=NO | xcpretty -c
        - xcodebuild test -workspace Dip.xcworkspace -scheme Dip-OSX -sdk macosx -destination 'platform=OS X,arch=x86_64' ONLY_ACTIVE_ARCH=NO | xcpretty -c
        - xcodebuild test -workspace Dip.xcworkspace -scheme Dip-tvOS -sdk appletvsimulator -destination 'platform=tvOS Simulator,name=Apple TV 1080p,OS=latest' ONLY_ACTIVE_ARCH=NO | xcpretty -c
        - xcodebuild -workspace Dip.xcworkspace -scheme Dip-watchOS -sdk watchsimulator -destination 'platform=watchOS Simulator,name=Apple Watch - 38mm,OS=latest' ONLY_ACTIVE_ARCH=NO | xcpretty - c
        - xcodebuild test -workspace Dip.xcworkspace -scheme DipSampleApp -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 6,OS=latest' ONLY_ACTIVE_ARCH=NO | xcpretty -c
        - pod lib lint --quick
        - carthage build --no-skip-current
      os: osx
      osx_image: xcode7.3
      language: objective-c
    - script:
        - swift build
      os: linux
      dist: trusty
      sudo: required
      language: generic
      before_install:
        - eval "$(curl -sL https://gist.githubusercontent.com/kylef/5c0475ff02b7c7671d2a/raw/9f442512a46d7a2af7b850d65a7e9bd31edfb09b/swiftenv-install.sh)"
        - swiftenv install 2.2.1 && swiftenv local 2.2.1
        - export SWIFT_EXEC="$(swiftenv which swiftc)"
        - export SWIFT_VERSION=DEVELOPMENT-SNAPSHOT-2016-05-09-a
        - swiftenv install $SWIFT_VERSION && swiftenv local $SWIFT_VERSION

notifications:
  email: false
